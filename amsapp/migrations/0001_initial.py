# Generated by Django 4.1.2 on 2023-10-23 10:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('book_id', models.CharField(max_length=255, null=True)),
                ('author', models.CharField(max_length=100)),
                ('publication_date', models.CharField(max_length=10)),
                ('description', models.TextField()),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='book_covers/')),
                ('category', models.CharField(max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('popularity', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='book2',
            fields=[
                ('book_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='bookName', max_length=255)),
                ('subtitle', models.CharField(help_text='Boo10k_Sub_Name', max_length=255)),
                ('author', models.CharField(max_length=255, null=True)),
                ('category', models.CharField(help_text='Religious , Epic, research paper, newspaper', max_length=255)),
                ('pub_date', models.DateField(help_text='Publication Date')),
                ('description', models.TextField(help_text='Description')),
                ('isbn_no', models.CharField(max_length=20, unique=True)),
                ('pages', models.PositiveIntegerField(blank=True, help_text='number of pages', null=True)),
                ('image', models.FileField(blank=True, help_text='Book Cover Image', upload_to='uploads')),
                ('language', models.CharField(help_text='hindi', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='dealers2',
            fields=[
                ('dealers_id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=255, unique=True)),
                ('who', models.CharField(choices=[('author', 'author'), ('publisher', 'publisher'), ('donator', 'donator')], default='publisher', max_length=20, verbose_name='who')),
                ('email', models.EmailField(help_text='<em> abc@gmail.com <em>', max_length=254, unique=True)),
                ('status', models.CharField(choices=[('live', 'live'), ('block', 'block')], default='live', max_length=20, verbose_name='status')),
            ],
        ),
        migrations.CreateModel(
            name='GoogleBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_id', models.CharField(max_length=255, null=True)),
                ('title', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=255)),
                ('published_date', models.CharField(max_length=10)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='purchase2',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('orderdate', models.DateField()),
                ('bookquantity', models.PositiveIntegerField()),
                ('perbookprice', models.PositiveIntegerField()),
                ('totalprice', models.PositiveIntegerField(blank=True, default=0)),
                ('get_book_pub_date', models.DateField()),
                ('paymenttype', models.CharField(choices=[('cash', 'cash'), ('net-banking', 'net-banking'), ('UPI', 'UPI'), ('Card', 'Card')], default='cash', max_length=30, verbose_name='paymenttype')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchases_as_author', to='amsapp.book2')),
                ('book_title', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchases_as_title', to='amsapp.book2')),
                ('dealers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amsapp.dealers2')),
            ],
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_id', models.CharField(default=None, max_length=255)),
                ('book_isbn', models.CharField(default=None, max_length=255)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='R_Purchase',
            fields=[
                ('rp_id', models.AutoField(primary_key=True, serialize=False)),
                ('bookquantity', models.PositiveIntegerField()),
                ('perbookprice', models.PositiveIntegerField()),
                ('Userid', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('purchaseid', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='amsapp.purchase2')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile_number', models.CharField(help_text='Required. Enter your mobile number.', max_length=15)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('Address', models.CharField(help_text='Required. Enter address.', max_length=100)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('district', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('postName', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IssuedBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField()),
                ('return_date', models.DateField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amsapp.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items', models.ManyToManyField(to='amsapp.book')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookStock2',
            fields=[
                ('stock_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity_in_stock', models.IntegerField(default=0, help_text='Quantity available in stock')),
                ('purchase_price', models.PositiveIntegerField(help_text='Price at which the book was purchased')),
                ('selling_price', models.PositiveIntegerField(help_text='Price at which the book is sold')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='amsapp.book2')),
                ('book', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='amsapp.book2')),
                ('dealer', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='amsapp.dealers2')),
            ],
        ),
        migrations.CreateModel(
            name='BookAvailabilityRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('message', models.TextField(blank=True, null=True)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amsapp.book')),
                ('issuedbook', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='amsapp.issuedbook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='book2',
            name='bookDealer',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='amsapp.dealers2'),
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issuance_date', models.DateField()),
                ('due_date', models.DateField()),
                ('charges', models.DecimalField(decimal_places=2, max_digits=10)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amsapp.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
